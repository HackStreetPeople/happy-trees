<div class="container">
  {{!-- nav-block link needs to be inside div to be included in the styling --}}
  {{> nav/nav-block}}

  <div class="header">

    <div class="login">
      {{#if isloggedin}}
      You are logged in as {{user.firstName}}
      <a href="/logout"> <button type="btn" class="btn">Logout</button></a>
      {{else}}
      {{>modal/login-block}}
      {{/if}}
      <h5 id="login-err-msg"></h5>
    </div>

    <div class="tree-data">

      <div class="upload">
        <h1 class="has-text-black is-size-3">Upload CSV file with tree Data into database</h1>
        <form action="/uploadfile" enctype="multipart/form-data" method="post">
          <label for="file-upload" class="button is-black has-text-white is-size-6">
            <input id="file-upload" type="file" name="uploadfile" accept='csv'>
            Upload File
          </label>
          <input class="button is-black has-text-white is-size-6" type="submit" value="Upload CSV">
        </form>
      </div>

      <div class="view">
        <h2 class="has-text-black is-size-3">View Tree Data:</h2>
        <button class="button is-black has-text-white is-size-5" id="getTrees">Get Trees</button>
        <div id="treedata"></div>
      </div>
    </div>

  </div>

  <div class="map has-text-black is-size-3">
    <h2>Mitigation Site Locations</h2>
    <!--The div element for the map -->
    <div id="map"> 
      <img src="../public/assets/images/map.png" alt="map of mitigation sites" width="900" height="200">
    </div>
    <!-- My Map Here: Async script executes immediately and must be after any DOM elements used in callback. -->
    <script async defer
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCplpc0oQkWZMiH7Qhu9RruadMb6PikeuU&callback=initMap&v=weekly">
      </script>
    <script>
      const getTreesButton = document.getElementById('getTrees')

      getTreesButton.addEventListener('click', () => {
        console.log('get trees')
        var myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        var requestOptions = {
          method: 'GET',
          headers: myHeaders,
          redirect: 'follow'
        };

        fetch("/api/trees2", requestOptions)
          .then(response => response.json())
          .then(result => {
            console.log('TREES ', result)
            result.map(tree => {
              const treedata = document.getElementById('treedata')
              const paragraph = document.createElement('p')
              paragraph.textContent = tree.Scientific_Name


              treedata.appendChild(paragraph)

          fetch("/api/trees2", requestOptions)
            .then(response => response.json())
            .then(result => {
              console.log('TREES ', result)
              result.map(tree => {
                const treedata = document.getElementById('treedata')
                const paragraph = document.createElement('p')
                const paragraph2 = document.createElement('p')
                const paragraph3 = document.createElement('p')
                const paragraph4 = document.createElement('p')
                const paragraph5 = document.createElement('p')
                const paragraph6 = document.createElement('p')
                paragraph.textContent = `Plant species: ${tree.Scientific_Name}`
                paragraph2.textContent = `Plot ID: ${tree.Plot_ID}`
                paragraph3.textContent = `Initial height: ${tree.MY0_Height}`
                paragraph4.textContent = `Planted/Volunteer: ${tree.Planted_or_Volunteer}`
                paragraph5.textContent = `Approval plan: ${tree.Performance_Standard_Approval}`
                paragraph6.textContent = "---------"

                treedata.appendChild(paragraph)
                treedata.appendChild(paragraph2)
                treedata.appendChild(paragraph3)
                treedata.appendChild(paragraph4)
                treedata.appendChild(paragraph5)
                treedata.appendChild(paragraph6)
              })
